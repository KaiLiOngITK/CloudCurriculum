version: '3.8'

services:
  user-services:
    image: node:18-alpine
    restart: on-failure
    build: 
      context: ./user-services
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user-services-database-postgres

  user-services-database-postgres:
    image: postgres:latest
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./user-services/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./user-services/volumes/postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    volumes:
      - ./product-services/db:/data/db
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT

  product-services:
    image: node:18-alpine
    restart: unless-stopped
    build: 
      context: ./product-services
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
    depends_on:
      - mongodb
    stdin_open: true
    tty: true

volumes:
  db: