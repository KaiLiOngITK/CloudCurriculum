version: '3'

services:
  user-services-database-postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./user-services-database-postgres:/var/lib/postgresql/data

  product-services-database-mongodb:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongodb-data:/data/db

  order-services-database-postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5433:5433
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      # POSTGRES_DB: cloudcurriculum
      PGPORT: 5433
    volumes:
      - ./order-services-database-postgres:/var/lib/postgresql/data

  user-services:
    build:
      context: ./user-services
      dockerfile: Dockerfile
    environment:
      - POSTGRES_URI=postgresql://postgres:password@user-services-database-postgres:5432/postgres?sslmode=disable
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - user-services-database-postgres

  product-services:
    build:
      context: ./product-services
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      - MONGODB_HOST=product-services-database-mongodb
      - MONGODB_PORT=27017
    depends_on:
      - product-services-database-mongodb

  order-services:
    build:
      context: ./order-services
      dockerfile: Dockerfile
    environment:
      - POSTGRES_URI=postgresql://postgres:password@order-services-database-postgres:5433/postgres?sslmode=disable 
      - USER_SERVICE_HOST=user-services
      - USER_SERVICE_PORT=8080
      - PRODUCT_SERVICE_HOST=product-services
      - PRODUCT_SERVICE_PORT=8081
    ports:
      - 8082:8082
    restart: always
    depends_on:
      - order-services-database-postgres

  # shipping-services:
  #   build: 
  #     context: ./shipping-services
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8083:8083
  #   restart: always
  #   depends_on:
  #     - rabbitmq

  # rabbitmq:
  #   image: rabbitmq:3.8-management-alpine
  #   ports:
  #     - 5673:5672
  #     - 15673:15672
  #   environment:
  #     - AMQP_URL='amqp://guest:guest@rabbitmq:5673/'
  #   volumes:
  #     - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
  #     - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  #   networks:
  #     - rabbitmq_cloudcurriculum
  
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
    depends_on:
      - user-services
      - product-services
      - order-services
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: always


volumes:
  user-services-database-postgres:
  mongodb-data:
  order-services-database-postgres:
  # rabbitmq:
  nginx:

networks:
  rabbitmq_cloudcurriculum:
    driver: bridge
